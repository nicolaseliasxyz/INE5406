LIBRARY ieee;
USE ieee.std_logic_1164.all;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
use ieee.NUMERIC_STD.all;

ENTITY ula IS
  generic(N: integer := 4);
  PORT ( a, b : IN STD_LOGIC_VECTOR(N-1 DOWNTO 0);
         ula_sel: IN STD_LOGIC_VECTOR(2 DOWNTO 0);
         pronto: out std_logic;
         y : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
         z: OUT STD_LOGIC;);
  END ula;
 
ARCHITECTURE comportamento OF ula IS

COMPONENT multiplicador IS
    port (Reset, clk, inicio : in std_logic;
            entA, entB : in std_logic_vector(N-1 downto 0);
            pronto : out std_logic;
		    saida: out std_logic_vector(7 downto 0));
END COMPONENT;

signal ula_result: std_logic_vector(7 downto 0);
signal ula_pronto, ula_result_flag: std_logic;

BEGIN
    process(ula_sel)
        begin
            ula_pronto <= '0';
        case(ula_sel) is
            when 000 =>
                ula_result <= "0000" & a + "0000" & b;
                ula_pronto <= '1';
            when 001 =>
                ula_result <= "0000" & a - "0000" & b;
                ula_pronto <= '1';
            when 010 =>
                ula_result_flag <= a and b;
                ula_pronto <= '1';
            when 011 =>
                ula_result_flag <= a or b;
                ula_pronto <= '1';
            when 100 =>
                mult: multiplicador port map(entA => a,
                                             entB => b,
                                             pronto => ula_pronto,
                                             saida => ula_result);
    end case;
    end process;
    
pronto <= ula_pronto;
y <= ula_result;
z <= ula_result_flag;
     

END comportamento;